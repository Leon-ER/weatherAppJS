(()=>{"use strict";let e=null,n="c";async function i(i){e=await async function(e){const n=await fetch(`https://api.weatherapi.com/v1/current.json?key=edd981f1213248efa32193959240205&q=${e}`),i=await n.json(),{current:{temp_c:t,feelslike_c:d,wind_kph:s,temp_f:r,feelslike_f:c,wind_mph:m,condition:{icon:o},humidity:l,vis_km:p,vis_miles:u,pressure_mb:y,wind_dir:a},location:{name:h}}=i;return{tempC:t,feelsLikeC:d,windSpeedKph:s,tempF:r,feelsLikeF:c,windSpeedMph:m,icon:o,location:h,hum:l,visKph:p,visMph:u,pressure:y,windDir:a}}(i),t(n)}function t(n){const i=document.getElementById("temp-display"),t=document.getElementById("feels-like-display"),d=document.getElementById("wind-speed-display"),s=document.getElementById("icon-display"),r=document.getElementById("location-display"),c=document.getElementById("wind-direction"),m=document.getElementById("humidity"),o=document.getElementById("pressure"),l=document.getElementById("visibility");"c"===n?(i.innerHTML=`${e.tempC}째C`,t.innerHTML=`Feels Like:<br>${e.feelsLikeC}째C`,d.innerHTML=`Wind Speed:<br>${e.windSpeedKph} kph`,l.innerHTML=`Visibility: <br> ${e.visKph}kph`):(i.innerHTML=`${e.tempF}째F`,t.innerHTML=`Feels Like:<br>${e.feelsLikeF}째F`,d.innerHTML=`Wind Speed:<br>${e.windSpeedMph} mph`,l.innerHTML=`Visibility: <br> ${e.visMph}mph`),m.innerHTML=`Humidity:<br>${e.hum}`,o.innerHTML=`Pressure:<br>${e.pressure}`,c.innerHTML=`Wind dir:<br>${e.windDir}`,s.src=e.icon,r.textContent=e.location}function d(){n="c"===n?"f":"c",t(n)}!function(){document.getElementById("toggle-button").addEventListener("click",d);const e=document.getElementById("cityName");e.addEventListener("keydown",(n=>{"Enter"===n.key&&i(e.value)})),i("London")}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,